Array.prototype.forEach||(Array.prototype.forEach=function(a,b){for(var c=this.length>>>0,d=0;d<c;d++)d in this&&a.call(b,this[d],d,this)}),Array.prototype.map||(Array.prototype.map=function(a){var b=this.length>>>0;if("function"!=typeof a)throw new TypeError;for(var c=Array(b),d=arguments[1],e=0;e<b;e++)e in this&&(c[e]=a.call(d,this[e],e,this));return c}),Array.prototype.indexOf||(Array.prototype.indexOf=function(a){var b=this.length;if(!b)return-1;var c=arguments[1]||0;if(c>=b)return-1;for(0>c&&(c+=b);c<b;c++)if(Object.prototype.hasOwnProperty.call(this,c)&&a===this[c])return c;return-1}),function(){if(!Element.prototype.addEventListener){var a=[],b=function(b,c){var d=this,f=function(a){a.target=a.srcElement,a.currentTarget=d,"undefined"==typeof c.handleEvent?c.call(d,a):c.handleEvent(a)};if("DOMContentLoaded"==b){var g=function(a){"complete"==document.readyState&&f(a)};if(document.attachEvent("onreadystatechange",g),a.push({object:this,type:b,listener:c,wrapper:g}),"complete"==document.readyState){var h=new Event;h.srcElement=window,g(h)}}else this.attachEvent("on"+b,f),a.push({object:this,type:b,listener:c,wrapper:f})},c=function(b,c){for(var d=0;d<a.length;){var e=a[d];if(e.object==this&&e.type==b&&e.listener==c){"DOMContentLoaded"==b?this.detachEvent("onreadystatechange",e.wrapper):this.detachEvent("on"+b,e.wrapper),a.splice(d,1);break}++d}};Element.prototype.addEventListener=b,Element.prototype.removeEventListener=c,HTMLDocument&&(HTMLDocument.prototype.addEventListener=b,HTMLDocument.prototype.removeEventListener=c),Window&&(Window.prototype.addEventListener=b,Window.prototype.removeEventListener=c)}}(),function(){"firstElementChild"in document.documentElement||Object.defineProperty(Element.prototype,"firstElementChild",{get:function(){for(var a,b=this.children,c=0,d=b.length;c<d;++c)if(a=b[c],1===a.nodeType)return a;return null}})}(),function(){"previousElementSibling"in document.documentElement||Object.defineProperty(Element.prototype,"previousElementSibling",{get:function(){for(var a=this.previousSibling;a&&1!==a.nodeType;)a=a.previousSibling;return a}})}(),function(){"nextElementSibling"in document.documentElement||Object.defineProperty(Element.prototype,"nextElementSibling",{get:function(){for(var a=this.nextSibling;a&&1!==a.nodeType;)a=a.nextSibling;return a}})}(),function(){window.getComputedStyle||(window.getComputedStyle=function(a){if(!a)return null;/**
         * currentStyle returns an instance of a non-standard class called "CSSCurrentStyleDeclaration"
         * instead of "CSSStyleDeclaration", which has a few methods and properties missing (such as cssText).
         * https://msdn.microsoft.com/en-us/library/cc848941(v=vs.85).aspx
         *
         * Instead of returning the currentStyle value directly, we'll copy its properties to the style
         * of a shadow element. This ensures cssText is included, and ensures the result is an instance of
         * the correct DOM interface.
         *
         * There'll still be some minor discrepancies in the style values. For example, IE preserves the way
         * colour values were authored, whereas standards-compliant browsers will expand colours to use "rgb()"
         * notation. We won't bother to fix things like these, as they'd involve too much fiddling for little
         * gain.
         */var b=a.currentStyle,c=a.getBoundingClientRect(),d=document.createElement("div"),e=d.style;for(var f in b)e[f]=b[f];return e.cssFloat=e.styleFloat,"auto"===e.width&&(e.width=c.right-c.left+"px"),"auto"===e.height&&(e.height=c.bottom-c.top+"px"),e})}();